@model MVCProject.Models.Employee

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit Employee</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" class="form-control" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BranchId" class="control-label"></label>
                <select asp-for="BranchId" asp-items="ViewBag.BranchList" class="form-control">
                    <option value="0">--Select Branch--</option>
                </select>
                <span asp-validation-for="BranchId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="disabledTextInput" asp-for="Role" class="control-label"></label>
                <select id="disabledTextInput" asp-for="Role" class="form-control">
                    <option value="0">--Please Select Role--</option>
                    <option value="User">User</option>
                    <option value="Sales">Sales</option>
                    <option value="Supervisor">Supervisor</option>
                    <option value="Accountant">Accountant</option>
                    <option value="Branch Admin">Branch Admin</option>
                    <option value="Storekeeper">Storekeeper</option>
                    <option value="Admin">Admin</option>
                </select>
                <span asp-validation-for="Role" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input type="checkbox" id="isAvailable" /> Available
                        <input type="hidden" asp-for="IsDeleted" id="isDeleted" />
                    </label>
                </div>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a class="btn btn-outline-secondary" asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(function () {
            // Set initial state of checkbox
            var isDeleted = $('#isDeleted').val().toLowerCase() === 'true';
            $('#isAvailable').prop('checked', !isDeleted);

            // On form submit, invert the checkbox value
            $('form').on('submit', function () {
                var isChecked = $('#isAvailable').is(':checked');
                $('#isDeleted').val(!isChecked);
            });
        });
    </script>
}
