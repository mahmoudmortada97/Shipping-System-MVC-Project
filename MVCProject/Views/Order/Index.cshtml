@using MVCProject.ViewModel
@model List<OrderReporttWithOrderByStatusDateViewModel>

@{
    ViewData["Title"] = "Index";
}




<h1>Orders</h1>
@if (User.IsInRole("Trader"))
{
    <p>
        <a class="btn btn-outline-primary my-2" asp-action="Create">Create New</a>
    </p>
}
<div class="row my-3 flex-wrap ">
    <div class="col-md-3 my-1 filter-btn">
        <button data-orderState="0" onclick="filterOrders(0)" class="btn btn-primary">All</button>
    </div>
    @foreach (var item in ViewBag.OrderStates)
    {
        <div class="col-md-3 my-1">
            <button id="@item.Id" onclick="filterOrders(@item.Id)" data-orderState="@item.Id" class="btn btn-primary">@item.Name</button>
        </div>
    }

</div>

<table class="table table-bordered text-ceneter table-hover">
    <thead>
        <tr>
            <th>
               #
            </th>
            <th>
                Date
            </th>
            <th>
               Client Details
            </th>
            <th>
                Governorate
            </th>
            <th>
                City
            </th>
            <th>
               Order Cost
            </th>
            @if (User.IsInRole("Employee") || User.IsInRole("Admin"))
            {
                <th>
                    Edit Status
                </th>
            }

           
            @if (User.IsInRole("Trader"))
{
            <th>
                Edit Order
            </th>
            <th>
                Delete
            </th>
}
            <th>
                <i class="fa-solid fa-print"></i>
            </th>
        </tr>
    </thead>
    <tbody id="tableData" >

@foreach (var item in Model) {

            <tr style="@(item.Status == "Delivered to the client" ? "background-color: #baf8ba;" : "")">
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                    @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Client)<br/>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Governorate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ShippingPrice)
                </td>

                @if (User.IsInRole("Employee") || User.IsInRole("Admin"))
{
                <td>
                        <a asp-route-id="@item.Id" asp-action="Status" class="btn btn-primary">Status</a>
                </td>
}
                @if (User.IsInRole("Trader"))
{
            <td>
                    <a asp-action="Edit" asp-route-id="@item.Id"><i role="button" class="fa-solid fa-pen-to-square text-success"></i></a>
            </td>
          

                <td>
                    <form asp-action="Delete" asp-route-id="@item.Id" method="post" onsubmit="return confirm('Are you sure you want to delete this employee?');">
                        <input type="hidden" name="id" value="@item.Id" />
                        <button type="submit" class="btn btn-outline-danger">Delete</button>
                    </form>
                </td>
}
      
            <td>
                    <i role="button" class="fa-solid fa-print text-primary"></i>
                </td>
        </tr>
}
     </tbody>
</table>

@section scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>

        <script>
        function filterOrders(orderStateId) {

            var orderStateId = Number(orderStateId);
            $.ajax({
                url: `/Order/GetFilteredOrders?orderState=${orderStateId}`,
                error:function(){
                    console.log("Error");
                },
                success: function (result) {
                    document.getElementById("tableData").innerHTML = "";
                        
                    for (let i of result) {
                        let backgroundColor = i.status === "Delivered to the client" ? "background-color: #baf8ba;" : "";
                        let itemId = i.id;
                        console.log(i.status)
                        document.getElementById("tableData").innerHTML +=
                            `<tr style="${backgroundColor}">
                                <td>
                                    ${i.id}
                                </td>
                                <td>
                                            ${i.date}
                                </td>
                             
                                <td>
                                                       ${i.client} </br>
                                                       ${i.phoneNumber}

                            
                                </td>
                           
                                        <td>
                                                                 ${i.governorate}

                                    </td>

                                <td>
                                                   ${i.city}
                                 </td>

                                             <td>
                                                            ${i.shippingPrice}
                                         </td>
        @if (User.IsInRole("Employee") || User.IsInRole("Admin"))
{
                                                   <td>
            <button id="statusBtn_${i.id}" class="btn btn-primary" onclick="editStatus(${i.id})">Status</button>
                                    </td>
}

        @if (User.IsInRole("Trader"))
    {
   
        <td>
                                    <a id="EditBtn_${i.id}"  onclick="edit(${i.id})"><i role="button" class="fa-solid fa-pen-to-square text-success"></i></a>
        </td>


        <td>
            <form asp-action="Delete" method="post" onsubmit="return confirm('Are you sure you want to delete this employee?');">
                            <input type="hidden" name="id" value="${itemId}" />
                <button type="submit" class="btn btn-outline-danger">Delete</button>
            </form>

        </td>
    }

                    <td>
                            <i role="button" class="fa-solid fa-print text-primary"></i>
                        </td>


                </tr>
        `
                    }
                }
            });
         
            }

        function editStatus(id) {
            // Code to handle the status button click event
            // You can use AJAX or other techniques to send a request to the server to update the status
            // Here's an example AJAX request:
            $.ajax({
                url: `/Order/Status/${id}`, // Replace with your actual endpoint URL
                method: 'Get',
                success: function (response) {
                    // Handle the success response
                    window.location.href = `/Order/Status/${id}`;

                },
                error: function (error) {
                    // Handle the error response
                    console.error('Error updating status:', error);
                }
            });
        }
        function edit(id){
            $.ajax({
                url: `/Order/Edit/${id}`, // Replace with your actual endpoint URL
                method: 'Get',
                success: function (response) {
                    // Handle the success response
                    window.location.href = `/Order/Edit/${id}`;
                },
                error: function (error) {
                    // Handle the error response
                    console.error('Error updating status:', error);
                }
            });
        }
                </script>
}